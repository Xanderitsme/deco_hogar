//  Sintaxis:
//  "{}": Las llaves envuelven el contenido de un elemento.  
//  "()": Los paréntesis indican que ese elemento es un enlace (botón) que puede llevar a otra interfaz.
//  ":" : Los dos puntos funcionan de forma similar a las llaves, indican el contenido de un elemento.
//  "-" : El guión representa elementos de una lista, no interactuables.
//  ";" : El punto y coma indica que el elemento interactivo es un botón.
//  "``": Las tildes como comillas sirven para hacer una explicación o aclaración.
//  "*" : El asterisco indica que un evento se debe realizar siempre
//  "·" : Ideas no implementadas
-----------------------------------------------------------------------------------------------------------

Sistema de gestión de inventario para deco_hogar

Acciones generales {
 x Iniciar sesion
 x generar proforma de venta de productos (vendedores) `vender productos`
 - generar factura y cobrar (cajero) `confirmar venta`
 - gestionar inventario almacen (administrador almacen) `gestionar almacen`
 - gestionar trabajadores, sueldos, cuentas (administrador general) `gestionar trabajadores`

 - Ver el registro de almacén
 - Añadir un producto
 - Ver los trabajadores
 - Ver reporte de las ventas de los trabajadores
 - ver reporte del dia
 - Generar facturas
 - modificar datos producto (solo adinistrador de almacen)
 - Crear una cuenta (solo administrador general)
}

Eventos generales de la aplicación:

*Iniciar sesion (todos) {
    `Usuario:` usuario
    `Contraseña:` contraseña
    Iniciar sesion();
}

----- Vendedor / Cajero -----

Productos (vendedor / cajero) {
    "Interfaz general"

	Buscador de productos ();

    Producto [] {
     - Nombre
     - Descripción
     - Precio
     - Disponible
     - Añadir producto();
    }

    Lista productos seleccionados {
    	Vaciar lista (); `tres puntos`
        producto [] {
          - Nombre...
            Editar ();
            Eliminar ();
        }
        
        `Subtotal:` $ subtotal
        Generar proforma de venta ();
    }

    · historial de ventas general
}

Añadir producto / Editar (venta) {
    "Ventana flotante"

    producto:
     - Nombre
     - Descripción
     - Precio
     - Cantidad `aumentar o disminuir`
     - Aceptar();
}

Generar proforma de venta {
    "previsualizar proforma"

    *datos cliente {
        - Tipo (per_nat / per_jud)
          per_nat:
          - DNI
          - Nombres
          - Apellidos
          per_jud:
          - RUC
          - Denominación social
        - Numero contacto

        Buscar cliente();
    }

    Volver ();
	Imprimir ();
    Confirmar ();

    Código de proforma: `Codigo`
}

Clientes (vendedor / cajero) {
	Buscador de clientes ();

	cliente {
		(Nombres y apellidos cliente / Denominación social)
		(DNI / RUC)
		Numero contacto
		fecha registro

		· Editar cliente ();
	}
}

----- Cajero -----

Confirmar venta (cajero) {
	Buscador de proformas ();

    proforma [] {
		Codigo
		fecha
		(DNI / RUC)
		Estado
		Total

		Ver proforma ();
	}

	papelera de reciclaje ();
}

Ver proforma () {
	proforma {
		Codigo proforma
		fecha proforma
		(Nombres y apellidos cliente / Denominación social)
		(DNI / RUC)
		Numero contacto
		Detalles [] {
			Nombre producto
			Cantidad
			Unidad
			Subtotal
		}
		Total

		(Estado == pendiente) {
			Confirmar venta ();
			Eliminar ();
		}
		
	}
}

Eliminar () {
	`Estas seguro que deseas eliminar esta proforma de venta?`
	(Si / No) ();
}

----- Administrador almacen -----

Gestionar inventario () {
	"Interfaz general"

	Buscador de productos ();

    Producto [] {
     	Nombre
     	Descripción
     	Precio
     	Stock
     	Editar datos ();
    }

	Agregar nuevo producto () {
		Nombre
		Descripción
     	Precio
     	Stock
	}

	Solicitar productos ();
	Historial de movimientos del inventario ();
	Ver ordenes de compra ();
}

Solicitar productos () {
	> proveedor: ...
	
	proveedor {
		Denominación social
		RUC
		Tiempo de envio
		Numero contacto
		Correo electrónico
		Ubicación
	}

	Elegir producto:
	Producto [] {
     	Nombre
     	Descripción
     	Precio
     	Stock
    }

	Stock: `stock`
	Motivo : `motivo de la solicitud`

	Confirma orden de compra ();
}

Historial de movimientos de inventario (Administrador almacen / Administrador general) {
	Movimiento inventario [] {
		Nombre producto
		Cantidad
		Tipo movimiento
		· VentaID
		Fecha movimiento
	}
}

Ver ordenes de compra (Administrador almacen / Administrador general) {
	Ordenes de compra [] {
		Nombre producto
		Cantidad
		Estado
		Denominación social proveedor
		Fecha pedido
		Fecha entrega esperada
	}
}

----- Administrador general -----

Gestionar ordenes de compra {
	
	Ver ordenes de compra ();
	Autorizar orden de compra ();
}

Trabajadores {
	trabajadores [] {
		Nombres y apellidos
		DNI
		cargo
		Sueldo
		Celular
		Correo electrónico
		Fecha contratación
	}

	Registrar trabajador ();
	Crear cuenta para trabajador ();
}

Registrar trabajador () {
	Nombres y apellidos
	DNI
	cargo
	Sueldo
	Celular
	Correo electrónico
	Fecha contratación
}

Crear cuenta para trabajador () {
	Elegir trabajador (sin cuenta):
	trabajadores [] {
		Nombres y apellidos
		DNI
		cargo
		Sueldo
		Celular
		Correo electrónico
		Fecha contratación
	}

	Usuario: `usuario`
	Contraseña temporal: `contraseña`
}